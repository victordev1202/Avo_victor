name: Build and Generate Ruby Gem on Tag Pushes

# on:
#   push:
#     tags:
#       - 'v*.*.*'

on: push

jobs:
  build:

    env:
      RAILS_ENV: production
      NODE_ENV: production

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:11.5
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
    # To automatically get bug fixes and new Ruby versions for ruby/setup-ruby,
    # change this to (see https://github.com/ruby/setup-ruby#versioning):
    # uses: ruby/setup-ruby@v1
      uses: ruby/setup-ruby@ec106b438a1ff6ff109590de34ddc62c540232e0
      with:
        ruby-version: 2.6.3

    - name: Install PostgreSQL 11 client
      run: |
        sudo apt-get -yqq install libpq-dev

    - uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-production-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-production-gems-

    - name: Bundle install
      env:
        PGHOST: localhost
        PGUSER: postgres
      run: |
        bundle config path vendor/bundle
        bundle install --jobs 4 --retry 3

    - name: Get yarn cache directory path
      id: production-yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v1
      id: production-yarn-cache
      with:
        path: ${{ steps.production-yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-production-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-production-yarn-

    - name: Yarn install
      run: bundle exec rails app:yarn:install

    - name: Bundle assets
      run: bundle exec rails app:webpacker:compile

    - name: Build gem
      run: bundle exec rails build

    - uses: actions/upload-artifact@v2
      with:
        name: avocado.gem
        path: pkg/
